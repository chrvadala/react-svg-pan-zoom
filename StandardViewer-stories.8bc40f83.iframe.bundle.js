"use strict";(self.webpackChunkreact_svg_pan_zoom=self.webpackChunkreact_svg_pan_zoom||[]).push([[926],{"./.storybook/stories/StandardViewer.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Methods:()=>Methods,Primary:()=>Primary,Rect1:()=>Rect1,Rect2:()=>Rect2,Rect3:()=>Rect3,Rect4:()=>Rect4,Resizable:()=>Resizable,Square:()=>Square,__namedExportsOrder:()=>__namedExportsOrder,default:()=>StandardViewer_stories});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),viewer=__webpack_require__("./src/viewer.js"),Snake_svg=__webpack_require__("./.storybook/stories/components/Snake.svg.js");const dist_module=current=>{const storedValue=react.useRef(current);return react.useEffect((()=>{storedValue.current=current})),storedValue},useDebounceCallback=(callback,wait=100,leading=!1)=>{const storedCallback=dist_module(callback),timeout=react.useRef(),deps=[wait,leading,storedCallback];function _ref(){timeout.current&&clearTimeout(timeout.current),timeout.current=void 0}function _ref2(){timeout.current=void 0}return react.useEffect((()=>_ref),deps),react.useCallback((function(){const args=arguments,{current}=timeout;if(void 0===current&&leading)return timeout.current=setTimeout(_ref2,wait),storedCallback.current.apply(null,args);current&&clearTimeout(current),timeout.current=setTimeout((()=>{timeout.current=void 0,storedCallback.current.apply(null,args)}),wait)}),deps)};const event_dist_module=function useEvent(target,type,listener,cleanup){const storedListener=react.useRef(listener),storedCleanup=react.useRef(cleanup);react.useEffect((()=>{storedListener.current=listener,storedCleanup.current=cleanup})),react.useEffect((()=>{const targetEl=target&&"current"in target?target.current:target;if(!targetEl)return;let didUnsubscribe=0;function listener(...args){didUnsubscribe||storedListener.current.apply(this,args)}targetEl.addEventListener(type,listener);const cleanup=storedCleanup.current;return()=>{didUnsubscribe=1,targetEl.removeEventListener(type,listener),cleanup&&cleanup()}}),[target,type])},emptyObj={},win="undefined"==typeof window?null:window,wv=win&&void 0!==win.visualViewport?win.visualViewport:null,getSize=()=>[document.documentElement.clientWidth,document.documentElement.clientHeight],useWindowSize=function(options){void 0===options&&(options=emptyObj);const{wait,leading,initialWidth=0,initialHeight=0}=options,[size,setDebouncedSize]=((initialState,wait,leading)=>{const state=react.useState(initialState);return[state[0],useDebounceCallback(state[1],wait,leading)]})("undefined"==typeof document?[initialWidth,initialHeight]:getSize,wait,leading),setSize=()=>setDebouncedSize(getSize);return event_dist_module(win,"resize",setSize),event_dist_module(wv,"resize",setSize),event_dist_module(win,"orientationchange",setSize),size};__webpack_require__("./src/uncontrolled-viewer.js"),__webpack_require__("./src/ui-toolbar/toolbar.jsx"),__webpack_require__("./src/ui-toolbar/toolbar-button.jsx"),__webpack_require__("./src/ui-toolbar/icon-cursor.jsx"),__webpack_require__("./src/ui-toolbar/icon-pan.jsx"),__webpack_require__("./src/ui-toolbar/icon-fit.jsx"),__webpack_require__("./src/ui-toolbar/icon-zoom-in.jsx"),__webpack_require__("./src/ui-toolbar/icon-zoom-out.jsx"),__webpack_require__("./src/ui-miniature/miniature.jsx"),__webpack_require__("./src/features/common.js"),__webpack_require__("./src/features/pan.js"),__webpack_require__("./src/features/zoom.js"),__webpack_require__("./src/features/miniature.js");var constants=__webpack_require__("./src/constants.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),STYLE_BUTTON={fontFamily:"courier",margin:"0rem 0.2rem 0.2rem",padding:"0.1rem",border:"1px solid black",background:"#000",color:"#0f0",cursor:"pointer"};const Button=function(_ref){var onClick=_ref.onClick,children=_ref.children;return(0,jsx_runtime.jsx)("button",{type:"button",style:STYLE_BUTTON,onClick,children})};var style={borderTop:"0px",borderBottom:"1px solid #333"};const HR=function(){return(0,jsx_runtime.jsx)("hr",{style})};var _excluded=["viewerWidth","viewerHeight","svgWidth","svgHeight"];const StandardViewer_stories={component:viewer.A,decorators:[function(story,context){var _useState=(0,react.useState)(constants.qD),_useState2=(0,slicedToArray.A)(_useState,2),tool=_useState2[0],onChangeTool=_useState2[1],_useState3=(0,react.useState)(constants.nx),_useState4=(0,slicedToArray.A)(_useState3,2),value=_useState4[0],onChangeValue=_useState4[1],args=(0,objectSpread2.A)((0,objectSpread2.A)({},context.args),{},{tool,onChangeTool,value,onChangeValue});return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{className:"toolSelector",style:{marginBottom:"10px",background:"#fff",padding:"10px"},children:[(0,jsx_runtime.jsx)("label",{children:"Tool"})," "," ",(0,jsx_runtime.jsxs)("select",{value:tool,onChange:function onChange(e){return onChangeTool(e.target.value)},children:[(0,jsx_runtime.jsx)("option",{value:constants.qD,children:constants.qD}),(0,jsx_runtime.jsx)("option",{value:constants.F9,children:constants.F9}),(0,jsx_runtime.jsx)("option",{value:constants.JN,children:constants.JN}),(0,jsx_runtime.jsx)("option",{value:constants.p7,children:constants.p7}),(0,jsx_runtime.jsx)("option",{value:constants.Wm,children:constants.Wm})]})]}),story({args})]})},function(story,_ref){var args=_ref.args,nextArgs={};for(var arg in args){var val=args[arg];if(arg.startsWith("miniatureProps")||arg.startsWith("toolbarProps")){var _arg$split=arg.split("."),_arg$split2=(0,slicedToArray.A)(_arg$split,2),prefix=_arg$split2[0],subProp=_arg$split2[1];nextArgs[prefix]=nextArgs[prefix]||{},subProp?nextArgs[prefix][subProp]=val:nextArgs[prefix]=(0,objectSpread2.A)((0,objectSpread2.A)({},nextArgs[prefix]),val)}else nextArgs[arg]=val}return story({args:nextArgs})}],argTypes:{tool:{control:{disable:!0}},value:{control:{disable:!0}},customMiniature:{control:{disable:!0}},customToolbar:{control:{disable:!0}},children:{control:{disable:!0}},onClick:{action:"onClick"},onDoubleClick:{action:"onDoubleClick"},onMouseUp:{action:"onMouseUp"},onMouseDown:{action:"onMouseDown"},onTouchStart:{action:"onTouchStart"},onTouchEnd:{action:"onTouchEnd"},"toolbarProps.position":{options:[constants.PV,constants.Us,constants.LY,constants.aW,constants._L],control:{type:"select"}},"toolbarProps.SVGAlignX":{control:{type:"select"},options:[constants.C7,constants.oM,constants.t7,constants.wC]},"toolbarProps.SVGAlignY":{control:{type:"select"},options:[constants.uN,constants.oM,constants.Ez,constants.wC]},"toolbarProps.activeToolColor":{control:{type:"color"}},"miniatureProps.position":{control:{type:"select"},options:[constants.PV,constants.LY,constants._L]},"miniatureProps.background":{control:{type:"color"}},"miniatureProps.width":{control:{type:"number",min:1}},"miniatureProps.height":{control:{type:"number",min:1}}}};var Primary=function Template(args){var Viewer=(0,react.useRef)(null);return(0,react.useEffect)((function(){Viewer.current.fitToViewer()}),[]),(0,jsx_runtime.jsx)(viewer.A,(0,objectSpread2.A)((0,objectSpread2.A)({ref:Viewer},args),{},{children:(0,jsx_runtime.jsx)("svg",{width:1440,height:1440,children:(0,jsx_runtime.jsx)(Snake_svg.A,{})})}))}.bind({});Primary.args={width:400,height:400};var TemplateMultiMeasures=function TemplateMultiMeasures(_ref){_ref.viewerWidth,_ref.viewerHeight;var svgWidth=_ref.svgWidth,svgHeight=_ref.svgHeight,args=(0,objectWithoutProperties.A)(_ref,_excluded),Viewer=(0,react.useRef)(null);return(0,react.useEffect)((function(){Viewer.current.fitToViewer()}),[]),(0,jsx_runtime.jsx)(viewer.A,(0,objectSpread2.A)((0,objectSpread2.A)({ref:Viewer},args),{},{children:(0,jsx_runtime.jsxs)("svg",{width:svgWidth,height:svgHeight,children:[(0,jsx_runtime.jsx)("rect",{x:"20",y:"20",width:svgWidth-40,height:svgHeight-40,fill:"blue",stroke:"black"}),(0,jsx_runtime.jsxs)("text",{x:"20",y:"15",children:[svgWidth,"x",svgHeight]})]})}))},Square=TemplateMultiMeasures.bind({});Square.args={width:400,height:400,svgWidth:300,svgHeight:300};var Rect1=TemplateMultiMeasures.bind({});Rect1.args={width:600,height:400,svgWidth:300,svgHeight:600};var Rect2=TemplateMultiMeasures.bind({});Rect2.args={width:600,height:400,svgWidth:600,svgHeight:300};var Rect3=TemplateMultiMeasures.bind({});Rect3.args={width:400,height:600,svgWidth:300,svgHeight:600};var Rect4=TemplateMultiMeasures.bind({});Rect4.args={width:400,height:600,svgWidth:600,svgHeight:300};var Methods=function Methods(args){var Viewer=(0,react.useRef)(null),changeTool=function changeTool(nextTool){return args.onChangeTool(nextTool)};return(0,react.useEffect)((function(){Viewer.current.fitToViewer()}),[]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.fitToViewer()},children:".fitToViewer()"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.reset()},children:".reset()"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.fitSelection(725,40,200,120)},children:".fitSelection(725, 40, 200, 120)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.zoomOnViewerCenter(1.1)},children:".zoomOnViewerCenter(1.1)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.zoomOnViewerCenter(.9)},children:".zoomOnViewerCenter(0.9)}"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.setPointOnViewerCenter(525,780,2)},children:".setPointOnViewerCenter(525, 780, 2)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.pan(0,-100)},children:".pan(0, -100)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.pan(100,0)},children:".pan(100, 0)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.pan(0,100)},children:".pan(0, 100)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.pan(-100,0)},children:".pan(-100, 0)"})]}),(0,jsx_runtime.jsx)(HR,{}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return changeTool(constants.F9)},children:".changeTool(TOOL_AUTO)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return changeTool(constants.qD)},children:".changeTool(TOOL_NONE)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return changeTool(constants.JN)},children:".changeTool(TOOL_PAN)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return changeTool(constants.p7)},children:".changeTool(TOOL_ZOOM_IN)"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return changeTool(constants.Wm)},children:".changeTool(TOOL_ZOOM_OUT)"})]}),(0,jsx_runtime.jsx)(HR,{}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.openMiniature()},children:".openMiniature()"}),(0,jsx_runtime.jsx)(Button,{onClick:function onClick(event){return Viewer.current.closeMiniature()},children:".closeMiniature()"})]}),(0,jsx_runtime.jsx)(HR,{}),(0,jsx_runtime.jsx)(viewer.A,(0,objectSpread2.A)((0,objectSpread2.A)({ref:Viewer},args),{},{children:(0,jsx_runtime.jsx)("svg",{width:1440,height:1440,children:(0,jsx_runtime.jsx)(Snake_svg.A,{})})}))]})};Methods.args={width:400,height:400};var Resizable=function Resizable(args){var Viewer=(0,react.useRef)(null),_useState=(0,react.useState)(constants.qD),_useState2=(0,slicedToArray.A)(_useState,2),tool=_useState2[0],onChangeTool=_useState2[1],_useState3=(0,react.useState)(constants.nx),_useState4=(0,slicedToArray.A)(_useState3,2),value=_useState4[0],onChangeValue=_useState4[1],_useWindowSize=useWindowSize({initialWidth:400,initialHeight:400}),_useWindowSize2=(0,slicedToArray.A)(_useWindowSize,2),width=_useWindowSize2[0],height=_useWindowSize2[1];return(0,react.useLayoutEffect)((function(){Viewer.current.fitToViewer()}),[]),(0,jsx_runtime.jsx)(viewer.A,(0,objectSpread2.A)((0,objectSpread2.A)({width,height,ref:Viewer,value,onChangeValue,tool,onChangeTool},args),{},{children:(0,jsx_runtime.jsx)("svg",{width:1440,height:1440,children:(0,jsx_runtime.jsx)(Snake_svg.A,{})})}))};Resizable.decorators=[function(story){return(0,jsx_runtime.jsx)("div",{style:{height:"100%",margin:"-63px -14px -14px"},children:story()})}];const __namedExportsOrder=["Primary","Square","Rect1","Rect2","Rect3","Rect4","Methods","Resizable"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"args => {\n  const Viewer = useRef(null);\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <ReactSVGPanZoom ref={Viewer} {...args}>\n      <svg width={1440} height={1440}>\n        <Snake />\n      </svg>\n    </ReactSVGPanZoom>;\n}",...Primary.parameters?.docs?.source}}},Square.parameters={...Square.parameters,docs:{...Square.parameters?.docs,source:{originalSource:'({\n  viewerWidth,\n  viewerHeight,\n  svgWidth,\n  svgHeight,\n  ...args\n}) => {\n  const Viewer = useRef(null);\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <ReactSVGPanZoom ref={Viewer} {...args}>\n      <svg width={svgWidth} height={svgHeight}>\n        <rect x="20" y="20" width={svgWidth - 40} height={svgHeight - 40} fill="blue" stroke="black" />\n        <text x="20" y="15">{svgWidth}x{svgHeight}</text>\n      </svg>\n    </ReactSVGPanZoom>;\n}',...Square.parameters?.docs?.source}}},Rect1.parameters={...Rect1.parameters,docs:{...Rect1.parameters?.docs,source:{originalSource:'({\n  viewerWidth,\n  viewerHeight,\n  svgWidth,\n  svgHeight,\n  ...args\n}) => {\n  const Viewer = useRef(null);\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <ReactSVGPanZoom ref={Viewer} {...args}>\n      <svg width={svgWidth} height={svgHeight}>\n        <rect x="20" y="20" width={svgWidth - 40} height={svgHeight - 40} fill="blue" stroke="black" />\n        <text x="20" y="15">{svgWidth}x{svgHeight}</text>\n      </svg>\n    </ReactSVGPanZoom>;\n}',...Rect1.parameters?.docs?.source}}},Rect2.parameters={...Rect2.parameters,docs:{...Rect2.parameters?.docs,source:{originalSource:'({\n  viewerWidth,\n  viewerHeight,\n  svgWidth,\n  svgHeight,\n  ...args\n}) => {\n  const Viewer = useRef(null);\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <ReactSVGPanZoom ref={Viewer} {...args}>\n      <svg width={svgWidth} height={svgHeight}>\n        <rect x="20" y="20" width={svgWidth - 40} height={svgHeight - 40} fill="blue" stroke="black" />\n        <text x="20" y="15">{svgWidth}x{svgHeight}</text>\n      </svg>\n    </ReactSVGPanZoom>;\n}',...Rect2.parameters?.docs?.source}}},Rect3.parameters={...Rect3.parameters,docs:{...Rect3.parameters?.docs,source:{originalSource:'({\n  viewerWidth,\n  viewerHeight,\n  svgWidth,\n  svgHeight,\n  ...args\n}) => {\n  const Viewer = useRef(null);\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <ReactSVGPanZoom ref={Viewer} {...args}>\n      <svg width={svgWidth} height={svgHeight}>\n        <rect x="20" y="20" width={svgWidth - 40} height={svgHeight - 40} fill="blue" stroke="black" />\n        <text x="20" y="15">{svgWidth}x{svgHeight}</text>\n      </svg>\n    </ReactSVGPanZoom>;\n}',...Rect3.parameters?.docs?.source}}},Rect4.parameters={...Rect4.parameters,docs:{...Rect4.parameters?.docs,source:{originalSource:'({\n  viewerWidth,\n  viewerHeight,\n  svgWidth,\n  svgHeight,\n  ...args\n}) => {\n  const Viewer = useRef(null);\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <ReactSVGPanZoom ref={Viewer} {...args}>\n      <svg width={svgWidth} height={svgHeight}>\n        <rect x="20" y="20" width={svgWidth - 40} height={svgHeight - 40} fill="blue" stroke="black" />\n        <text x="20" y="15">{svgWidth}x{svgHeight}</text>\n      </svg>\n    </ReactSVGPanZoom>;\n}',...Rect4.parameters?.docs?.source}}},Methods.parameters={...Methods.parameters,docs:{...Methods.parameters?.docs,source:{originalSource:"args => {\n  const Viewer = useRef(null);\n  const changeTool = nextTool => args.onChangeTool(nextTool);\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <>\n      <div>\n        <Button onClick={event => Viewer.current.fitToViewer()}>.fitToViewer()\n        </Button>\n\n        <Button onClick={event => Viewer.current.reset()}>.reset()\n        </Button>\n\n        <Button onClick={event => Viewer.current.fitSelection(725, 40, 200, 120)}>.fitSelection(725, 40, 200, 120)\n        </Button>\n\n        <Button onClick={event => Viewer.current.zoomOnViewerCenter(1.1)}>.zoomOnViewerCenter(1.1)\n        </Button>\n\n        <Button onClick={event => Viewer.current.zoomOnViewerCenter(0.9)}>.zoomOnViewerCenter(0.9)}\n        </Button>\n\n        <Button onClick={event => Viewer.current.setPointOnViewerCenter(525, 780, 2)}>.setPointOnViewerCenter(525, 780,\n          2)\n        </Button>\n\n        <Button onClick={event => Viewer.current.pan(0, -100)}>.pan(0, -100)\n        </Button>\n\n        <Button onClick={event => Viewer.current.pan(100, 0)}>.pan(100, 0)\n        </Button>\n\n        <Button onClick={event => Viewer.current.pan(0, 100)}>.pan(0, 100)\n        </Button>\n\n        <Button onClick={event => Viewer.current.pan(-100, 0)}>.pan(-100, 0)\n        </Button>\n      </div>\n\n      <HR />\n\n      <div>\n\n        <Button onClick={event => changeTool(TOOL_AUTO)}>.changeTool(TOOL_AUTO)\n        </Button>\n        <Button onClick={event => changeTool(TOOL_NONE)}>.changeTool(TOOL_NONE)\n        </Button>\n        <Button onClick={event => changeTool(TOOL_PAN)}>.changeTool(TOOL_PAN)\n        </Button>\n        <Button onClick={event => changeTool(TOOL_ZOOM_IN)}>.changeTool(TOOL_ZOOM_IN)\n        </Button>\n        <Button onClick={event => changeTool(TOOL_ZOOM_OUT)}>.changeTool(TOOL_ZOOM_OUT)\n        </Button>\n      </div>\n\n      <HR />\n\n      <div>\n        <Button onClick={event => Viewer.current.openMiniature()}>.openMiniature()\n        </Button>\n        <Button onClick={event => Viewer.current.closeMiniature()}>.closeMiniature()\n        </Button>\n      </div>\n\n      <HR />\n\n      <ReactSVGPanZoom ref={Viewer} {...args}>\n        <svg width={1440} height={1440}>\n          <Snake />\n        </svg>\n      </ReactSVGPanZoom>\n    </>;\n}",...Methods.parameters?.docs?.source}}},Resizable.parameters={...Resizable.parameters,docs:{...Resizable.parameters?.docs,source:{originalSource:"args => {\n  const Viewer = useRef(null);\n  const [tool, onChangeTool] = useState(TOOL_NONE);\n  const [value, onChangeValue] = useState(INITIAL_VALUE);\n  const [width, height] = useWindowSize({\n    initialWidth: 400,\n    initialHeight: 400\n  });\n  useLayoutEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n  return <ReactSVGPanZoom width={width} height={height} ref={Viewer} value={value} onChangeValue={onChangeValue} tool={tool} onChangeTool={onChangeTool} {...args}>\n      <svg width={1440} height={1440}>\n        <Snake />\n      </svg>\n    </ReactSVGPanZoom>;\n}",...Resizable.parameters?.docs?.source}}}}}]);